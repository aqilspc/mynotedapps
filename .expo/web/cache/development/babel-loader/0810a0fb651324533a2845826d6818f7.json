{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/aqil/Documents/kuliah/mobile/mini-project-aqilspc/src/Note.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Octicons, Entypo, FontAwesome } from '@expo/vector-icons';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 22\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44\n  },\n  itemtext: {\n    padding: 10,\n    fontSize: 12,\n    height: 44,\n    textAlign: 'center'\n  }\n});\n\nvar Note = function Note(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      id_user = _useState2[0],\n      setGetIdUser = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  AsyncStorage.getItem('id_user').then(function (value) {\n    return setGetIdUser(value);\n  });\n\n  var getDataNote = function getDataNote() {\n    return _regeneratorRuntime.async(function getDataNote$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fetch(\"https://mynotebackend.intermediatech.link/get_note\", {\n              method: \"POST\",\n              headers: new Headers({\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n              }),\n              body: \"&user_id=\" + id_user\n            }).then(function (response) {\n              return response.json();\n            }).then(function (responseJson) {\n              if (responseJson.status === \"success\") {\n                setData(responseJson.result);\n              } else {\n                if (responseJson.result.length == 0) {\n                  Alert.alert(\"\", responseJson.result);\n                }\n              }\n            }).catch(function (error) {\n              console.log(error);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (data.length == 0) {\n    getDataNote();\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 1\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Text, {\n        style: styles.item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 31\n        }\n      }, item.title, \" - \", JSON.stringify(item.date_note));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default Note;","map":{"version":3,"sources":["/home/aqil/Documents/kuliah/mobile/mini-project-aqilspc/src/Note.js"],"names":["React","useEffect","useState","AsyncStorage","Octicons","Entypo","FontAwesome","styles","StyleSheet","create","container","flex","paddingTop","item","padding","fontSize","height","itemtext","textAlign","Note","props","id_user","setGetIdUser","data","setData","getItem","then","value","getDataNote","fetch","method","headers","Headers","body","response","json","responseJson","status","result","length","Alert","alert","catch","error","console","log","title","JSON","stringify","date_note"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;;;;;SAC0CC,Y;;;;;;AAE1C,SAASC,QAAT,EAAkBC,MAAlB,EAAyBC,WAAzB,QAA4C,oBAA5C;AACA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACVC,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,UAAU,EAAE;AAFF,GADoB;AAK/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,EADL;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,MAAM,EAAE;AAHJ,GALyB;AAU/BC,EAAAA,QAAQ,EAAE;AACRH,IAAAA,OAAO,EAAE,EADD;AAERC,IAAAA,QAAQ,EAAE,EAFF;AAGRC,IAAAA,MAAM,EAAE,EAHA;AAIRE,IAAAA,SAAS,EAAC;AAJF;AAVqB,CAAlB,CAAf;;AAiBA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAEtB,kBAAgClB,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOmB,OAAP;AAAA,MAAgBC,YAAhB;;AACA,mBAAwBpB,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOqB,IAAP;AAAA,MAAaC,OAAb;;AAEArB,EAAAA,YAAY,CAACsB,OAAb,CAAqB,SAArB,EAAgCC,IAAhC,CACE,UAACC,KAAD;AAAA,WACEL,YAAY,CAACK,KAAD,CADd;AAAA,GADF;;AAQE,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAClBC,YAAAA,KAAK,CAAC,oDAAD,EAAuD;AAC1DC,cAAAA,MAAM,EAAE,MADkD;AAE1DC,cAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,gCAAgB;AADG,eAAZ,CAFiD;AAK1DC,cAAAA,IAAI,EAAE,cAAcZ;AALsC,aAAvD,CAAL,CAOGK,IAPH,CAOQ,UAACQ,QAAD;AAAA,qBAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,aAPR,EAQGT,IARH,CAQQ,UAACU,YAAD,EAAkB;AACtB,kBAAIA,YAAY,CAACC,MAAb,KAAwB,SAA5B,EAAuC;AACrCb,gBAAAA,OAAO,CAACY,YAAY,CAACE,MAAd,CAAP;AACD,eAFD,MAEO;AACL,oBAAGF,YAAY,CAACE,MAAb,CAAoBC,MAApB,IAA8B,CAAjC,EACA;AACEC,kBAAAA,KAAK,CAACC,KAAN,CAAY,EAAZ,EAAeL,YAAY,CAACE,MAA5B;AACD;AACF;AACF,aAjBH,EAkBGI,KAlBH,CAkBS,UAACC,KAAD,EAAW;AAChBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,aApBH;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAwBA,MAAGpB,IAAI,CAACgB,MAAL,IAAe,CAAlB,EACA;AACEX,IAAAA,WAAW;AACZ;;AAEH,SACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEa,IADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAEV,IAAF,QAAEA,IAAF;AAAA,aAAY,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACM,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACjBA,IAAI,CAACiC,KADY,SACFC,IAAI,CAACC,SAAL,CAAenC,IAAI,CAACoC,SAApB,CADE,CAAZ;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADE;AAUD,CApDD;;AAqDA,eAAe9B,IAAf","sourcesContent":["import React,{ useEffect, useState } from 'react';\nimport { FlatList, StyleSheet, Text, View,AsyncStorage , Alert,\n        TouchableOpacity,RefreshControl,ScrollView,SafeAreaView} from 'react-native';\nimport { Octicons,Entypo,FontAwesome } from '@expo/vector-icons';\nconst styles = StyleSheet.create({\n  container: {\n   flex: 1,\n   paddingTop: 22\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44,\n  },\n  itemtext: {\n    padding: 10,\n    fontSize: 12,\n    height: 44,\n    textAlign:'center',\n  },\n});\nconst Note = (props) => {\n  //instansiasi varibale session\n  const [id_user, setGetIdUser] = useState('');\n  const [data, setData] = useState([]);\n  // set session\n  AsyncStorage.getItem('id_user').then(\n    (value) =>\n      setGetIdUser(value),\n  );\n\n\n\n    //api handle\n    const getDataNote = async () => {\n      fetch(\"https://mynotebackend.intermediatech.link/get_note\", {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        }),\n        body: \"&user_id=\" + id_user,\n      })\n        .then((response) => response.json())\n        .then((responseJson) => {\n          if (responseJson.status === \"success\") {\n            setData(responseJson.result);\n          } else {\n            if(responseJson.result.length == 0)\n            {\n              Alert.alert(\"\",responseJson.result)\n            }\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    };\n\n    if(data.length == 0)\n    {\n      getDataNote();\n    }\n    \n  return (\n<View style={styles.container}>\n    <FlatList\n      data={data}\n      renderItem={({item}) => <Text style={styles.item}>\n            {item.title} - {JSON.stringify(item.date_note)} \n        </Text>}\n    />\n  </View>\n  );\n}\nexport default Note;\n"]},"metadata":{},"sourceType":"module"}